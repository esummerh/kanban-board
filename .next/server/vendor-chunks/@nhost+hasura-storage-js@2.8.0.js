"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@nhost+hasura-storage-js@2.8.0";
exports.ids = ["vendor-chunks/@nhost+hasura-storage-js@2.8.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@nhost+hasura-storage-js@2.8.0/node_modules/@nhost/hasura-storage-js/dist/index.cjs.js":
/*!*******************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@nhost+hasura-storage-js@2.8.0/node_modules/@nhost/hasura-storage-js/dist/index.cjs.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var C=Object.defineProperty;var N=(t,e,r)=>e in t?C(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var f=(t,e,r)=>N(t,typeof e!=\"symbol\"?e+\"\":e,r);Object.defineProperty(exports,Symbol.toStringTag,{value:\"Module\"});const x=__webpack_require__(/*! fetch-ponyfill */ \"(ssr)/./node_modules/.pnpm/fetch-ponyfill@7.1.0/node_modules/fetch-ponyfill/fetch-node.js\"),T=__webpack_require__(/*! form-data */ \"(ssr)/./node_modules/.pnpm/form-data@4.0.3/node_modules/form-data/lib/form_data.js\"),d=__webpack_require__(/*! xstate */ \"(ssr)/./node_modules/.pnpm/xstate@4.38.3/node_modules/xstate/es/index.js\");let M=globalThis.fetch;const O=async(t,e,{accessToken:r,name:s,fileId:a,bucketId:i,adminSecret:o,onUploadProgress:l,headers:c={}}={})=>{var L;const h={...c};i&&e.append(\"bucket-id\",i),o&&(h[\"x-hasura-admin-secret\"]=o),r&&(h.Authorization=`Bearer ${r}`);const U=`${t}/files`;if(typeof XMLHttpRequest==\"undefined\")try{e instanceof T&&(M=x().fetch);const u=await M(U,{method:\"POST\",headers:h,body:e}),n=await u.json();return u.ok?{fileMetadata:n,error:null}:{error:{status:u.status,message:((L=n==null?void 0:n.error)==null?void 0:L.message)||u.statusText,error:u.statusText},fileMetadata:null}}catch(u){return{error:{status:0,message:u.message,error:u.message},fileMetadata:null}}return new Promise(u=>{let n=new XMLHttpRequest;n.responseType=\"json\",n.onload=()=>{var p,g,w,S,F,_,I,R;if(n.status<200||n.status>=300){const b={error:(F=(S=(g=(p=n.response)==null?void 0:p.error)==null?void 0:g.message)!=null?S:(w=n.response)==null?void 0:w.error)!=null?F:n.response,message:(R=(I=(_=n.response)==null?void 0:_.error)==null?void 0:I.message)!=null?R:n.response,status:n.status};return u({fileMetadata:null,error:b})}return u({fileMetadata:n.response,error:null})},n.onerror=()=>{const p={error:n.statusText,message:n.statusText,status:n.status};return u({fileMetadata:null,error:p})},l&&n.upload.addEventListener(\"progress\",l,!1),n.open(\"POST\",U,!0),Object.entries(h).forEach(([p,g])=>{n.setRequestHeader(p,g)}),n.send(e)})};function A(t,e){if(!e||Object.keys(e).length===0)return t;const r=new URL(t),s=Object.entries(e).reduce((a,[i,o])=>({...a,[i.charAt(0)]:o}),{});return Object.entries(s).forEach(([a,i])=>{i&&r.searchParams.set(a,i)}),r.toString()}let m;typeof m==\"undefined\"&&(m=x().fetch);class k{constructor({url:e}){f(this,\"url\");f(this,\"accessToken\");f(this,\"adminSecret\");f(this,\"headers\",{});this.url=e}async uploadFormData({formData:e,bucketId:r,headers:s}){const{error:a,fileMetadata:i}=await O(this.url,e,{bucketId:r,headers:{...this.headers,...s},accessToken:this.accessToken,adminSecret:this.adminSecret});return a?{fileMetadata:null,error:a}:i&&!(\"processedFiles\"in i)?{fileMetadata:{processedFiles:[i]},error:null}:{fileMetadata:i,error:null}}async uploadFile({file:e,bucketId:r,id:s,name:a,headers:i}){const o=typeof window==\"undefined\"?new T:new FormData;o.append(\"file[]\",e),o.append(\"metadata[]\",JSON.stringify({id:s,name:a}));const{error:l,fileMetadata:c}=await O(this.url,o,{accessToken:this.accessToken,adminSecret:this.adminSecret,bucketId:r,fileId:s,name:a,headers:{...this.headers,...i}});return l?{fileMetadata:null,error:l}:c&&\"processedFiles\"in c?{fileMetadata:c.processedFiles[0],error:null}:{fileMetadata:c,error:null}}async downloadFile(e){try{const{fileId:r,headers:s,...a}=e,i=A(`${this.url}/files/${r}`,a),o=await m(i,{method:\"GET\",headers:{...this.generateAuthHeaders(),...this.headers,...s}});if(!o.ok)throw new Error(await o.text());return{file:await o.blob(),error:null}}catch(r){return{file:null,error:r}}}async getPresignedUrl(e){try{const{fileId:r,headers:s}=e,a=await m(`${this.url}/files/${r}/presignedurl`,{method:\"GET\",headers:{...this.generateAuthHeaders(),...this.headers,...s}});if(!a.ok)throw new Error(await a.text());return{presignedUrl:await a.json(),error:null}}catch(r){return{presignedUrl:null,error:r}}}async delete(e){try{const{fileId:r,headers:s}=e,a=await m(`${this.url}/files/${r}`,{method:\"DELETE\",headers:{...this.generateAuthHeaders(),...this.headers,...s}});if(!a.ok)throw new Error(await a.text());return{error:null}}catch(r){return{error:r}}}setAccessToken(e){return this.accessToken=e,this}setAdminSecret(e){return this.adminSecret=e,this}getHeaders(){return this.headers}setHeaders(e){return e?(this.headers={...this.headers,...e},this):this}unsetHeaders(){const e=this.headers[\"x-hasura-role\"];return this.headers=e?{\"x-hasura-role\":e}:{},this}generateAuthHeaders(){if(!(!this.adminSecret&&!this.accessToken))return this.adminSecret?{\"x-hasura-admin-secret\":this.adminSecret}:{Authorization:`Bearer ${this.accessToken}`}}}class ${constructor({url:e,adminSecret:r}){f(this,\"url\");f(this,\"api\");this.url=e,this.api=new k({url:e}),this.setAdminSecret(r)}async upload(e){return\"file\"in e?this.api.uploadFile(e):this.api.uploadFormData(e)}getPublicUrl(e){const{fileId:r,...s}=e;return A(`${this.url}/files/${r}`,s)}async getPresignedUrl(e){const{fileId:r,headers:s,...a}=e,{presignedUrl:i,error:o}=await this.api.getPresignedUrl(e);if(o)return{presignedUrl:null,error:o};if(!i)return{presignedUrl:null,error:new Error(\"Invalid file id\")};const l=A(i.url,a);return{presignedUrl:{...i,url:l},error:null}}async download(e){const{file:r,error:s}=await this.api.downloadFile(e);return s?{file:null,error:s}:r?{file:r,error:null}:{file:null,error:new Error(\"File does not exist\")}}async delete(e){const{error:r}=await this.api.delete(e);return r?{error:r}:{error:null}}setAccessToken(e){return this.api.setAccessToken(e),this}setAdminSecret(e){return this.api.setAdminSecret(e),this}getHeaders(){return this.api.getHeaders()}setHeaders(e){return this.api.setHeaders(e),this}unsetHeaders(){return this.api.unsetHeaders(),this}}let D;typeof D==\"undefined\"&&(D=T);const y={progress:null,loaded:0,error:null,bucketId:void 0,file:void 0,id:void 0},H=()=>d.createMachine({predictableActionArguments:!0,schema:{context:{},events:{}},tsTypes:{},context:{...y},initial:\"idle\",on:{DESTROY:{actions:\"sendDestroy\",target:\"stopped\"}},states:{idle:{on:{ADD:{actions:\"addFile\"},UPLOAD:{cond:\"hasFile\",target:\"uploading\"}}},uploading:{entry:\"resetProgress\",on:{UPLOAD_PROGRESS:{actions:[\"incrementProgress\",\"sendProgress\"]},UPLOAD_DONE:\"uploaded\",UPLOAD_ERROR:\"error\",CANCEL:\"idle\"},invoke:{src:\"uploadFile\"}},uploaded:{entry:[\"setFileMetadata\",\"sendDone\"],on:{ADD:{actions:\"addFile\",target:\"idle\"},UPLOAD:{actions:\"resetContext\",target:\"uploading\"}}},error:{entry:[\"setError\",\"sendError\"],on:{ADD:{actions:\"addFile\",target:\"idle\"},UPLOAD:{actions:\"resetContext\",target:\"uploading\"}}},stopped:{type:\"final\"}}},{guards:{hasFile:(t,e)=>!!t.file||!!e.file},actions:{incrementProgress:d.assign({loaded:(t,{loaded:e})=>e,progress:(t,{progress:e})=>e}),setFileMetadata:d.assign({id:(t,{id:e})=>e,bucketId:(t,{bucketId:e})=>e,progress:t=>100}),setError:d.assign({error:(t,{error:e})=>e}),sendProgress:()=>{},sendError:()=>{},sendDestroy:()=>{},sendDone:()=>{},resetProgress:d.assign({progress:t=>null,loaded:t=>0}),resetContext:d.assign(t=>y),addFile:d.assign({file:(t,{file:e})=>e,bucketId:(t,{bucketId:e})=>e,id:(t,{id:e})=>e})},services:{uploadFile:(t,e)=>r=>{const s=e.file||t.file,a=new D;a.append(\"file[]\",s);let i=0;return O(e.url,a,{fileId:e.id||t.id,bucketId:e.bucketId||t.bucketId,accessToken:e.accessToken,adminSecret:e.adminSecret,name:e.name||s.name,onUploadProgress:o=>{const l=o.total?Math.round(o.loaded*s.size/o.total):0,c=l-i;i=l,r({type:\"UPLOAD_PROGRESS\",progress:o.total?Math.round(l*100/o.total):0,loaded:l,additions:c})}}).then(({fileMetadata:o,error:l})=>{if(l&&r({type:\"UPLOAD_ERROR\",error:l}),o&&!(\"processedFiles\"in o)){const{id:c,bucketId:h}=o;r({type:\"UPLOAD_DONE\",id:c,bucketId:h})}if(o&&\"processedFiles\"in o){const{id:c,bucketId:h}=o.processedFiles[0];r({type:\"UPLOAD_DONE\",id:c,bucketId:h})}}),()=>{}}}}),{pure:E,sendParent:P}=d.actions,j=()=>d.createMachine({id:\"files-list\",schema:{context:{},events:{}},tsTypes:{},predictableActionArguments:!0,context:{progress:null,files:[],loaded:0,total:0},initial:\"idle\",on:{UPLOAD:{cond:\"hasFileToDownload\",actions:\"addItem\",target:\"uploading\"},ADD:{actions:\"addItem\"},REMOVE:{actions:\"removeItem\"}},states:{idle:{entry:[\"resetProgress\",\"resetLoaded\",\"resetTotal\"],on:{CLEAR:{actions:\"clearList\",target:\"idle\"}}},uploading:{entry:[\"upload\",\"startProgress\",\"resetLoaded\",\"resetTotal\"],on:{UPLOAD_PROGRESS:{actions:[\"incrementProgress\"]},UPLOAD_DONE:[{cond:\"isAllUploaded\",target:\"uploaded\"},{cond:\"isAllUploadedOrError\",target:\"error\"}],UPLOAD_ERROR:[{cond:\"isAllUploaded\",target:\"uploaded\"},{cond:\"isAllUploadedOrError\",target:\"error\"}],CANCEL:{actions:\"cancel\",target:\"idle\"}}},uploaded:{entry:\"setUploaded\",on:{CLEAR:{actions:\"clearList\",target:\"idle\"}}},error:{on:{CLEAR:{actions:\"clearList\",target:\"idle\"}}}}},{guards:{hasFileToDownload:(t,e)=>t.files.some(r=>r.getSnapshot().matches(\"idle\"))||!!e.files,isAllUploaded:t=>t.files.every(e=>{var r;return(r=e.getSnapshot())==null?void 0:r.matches(\"uploaded\")}),isAllUploadedOrError:t=>t.files.every(e=>{const r=e.getSnapshot();return(r==null?void 0:r.matches(\"error\"))||(r==null?void 0:r.matches(\"uploaded\"))})},actions:{incrementProgress:d.assign((t,e)=>{const r=t.loaded+e.additions,s=Math.round(r*100/t.total);return{...t,loaded:r,progress:s}}),setUploaded:d.assign({progress:t=>100,loaded:({files:t})=>t.map(e=>e.getSnapshot()).filter(e=>e.matches(\"uploaded\")).reduce((e,r)=>{var s;return e+((s=r.context.file)==null?void 0:s.size)},0)}),resetTotal:d.assign({total:({files:t})=>t.map(e=>e.getSnapshot()).filter(e=>!e.matches(\"uploaded\")).reduce((e,r)=>{var s;return e+((s=r.context.file)==null?void 0:s.size)},0)}),resetLoaded:d.assign({loaded:t=>0}),startProgress:d.assign({progress:t=>0}),resetProgress:d.assign({progress:t=>null}),addItem:d.assign((t,{files:e,bucketId:r})=>{const s=e?Array.isArray(e)?e:\"item\"in e?Array.from(e):[e]:[],a=t.total+s.reduce((o,l)=>o+l.size,0),i=Math.round(t.loaded*100/a);return{files:[...t.files,...s.map(o=>d.spawn(H().withConfig({actions:{sendProgress:P((l,{additions:c})=>({type:\"UPLOAD_PROGRESS\",additions:c})),sendDone:P(\"UPLOAD_DONE\"),sendError:P(\"UPLOAD_ERROR\"),sendDestroy:P(\"REMOVE\")}}).withContext({...y,file:o,bucketId:r}),{sync:!0}))],total:a,loaded:t.loaded,progress:i}}),removeItem:d.assign({files:t=>t.files.filter(e=>{var s,a;const r=(s=e.getSnapshot())==null?void 0:s.matches(\"stopped\");return r&&((a=e.stop)==null||a.call(e)),!r})}),clearList:E(t=>t.files.map(e=>d.send({type:\"DESTROY\"},{to:e.id}))),upload:E((t,e)=>t.files.map(r=>d.send(e,{to:r.id}))),cancel:E(t=>t.files.map(e=>d.send({type:\"CANCEL\"},{to:e.id})))}}),q=async(t,e)=>new Promise(r=>{e.send({type:\"UPLOAD\",...t}),e.subscribe(s=>{var a;s.matches(\"error\")?r({error:s.context.error,isError:!0,isUploaded:!1}):s.matches(\"uploaded\")&&r({error:null,isError:!1,isUploaded:!0,id:s.context.id,bucketId:s.context.id,name:(a=s.context.file)==null?void 0:a.name})})}),z=async(t,e)=>new Promise(r=>{e.send({type:\"UPLOAD\",...t,files:t.files}),e.onTransition(s=>{s.matches(\"error\")?r({errors:s.context.files.filter(a=>{var i;return(i=a.getSnapshot())==null?void 0:i.context.error}),isError:!0,files:[]}):s.matches(\"uploaded\")&&r({errors:[],isError:!1,files:s.context.files})})});exports.HasuraStorageApi=k;exports.HasuraStorageClient=$;exports.INITIAL_FILE_CONTEXT=y;exports.appendImageTransformationParameters=A;exports.createFileUploadMachine=H;exports.createMultipleFilesUploadMachine=j;exports.uploadFilePromise=q;exports.uploadMultipleFilesPromise=z;\n//# sourceMappingURL=index.cjs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQG5ob3N0K2hhc3VyYS1zdG9yYWdlLWpzQDIuOC4wL25vZGVfbW9kdWxlcy9Abmhvc3QvaGFzdXJhLXN0b3JhZ2UtanMvZGlzdC9pbmRleC5janMuanMiLCJtYXBwaW5ncyI6IkFBQWEsNEJBQTRCLDZCQUE2QixrREFBa0QsU0FBUyxnREFBZ0Qsa0RBQWtELGVBQWUsRUFBRSxRQUFRLG1CQUFPLENBQUMsaUhBQWdCLElBQUksbUJBQU8sQ0FBQyxxR0FBVyxJQUFJLG1CQUFPLENBQUMsd0ZBQVEsRUFBRSx1QkFBdUIsbUJBQW1CLHVGQUF1RixHQUFHLElBQUksTUFBTSxTQUFTLE1BQU0sMkZBQTJGLEVBQUUsR0FBRyxXQUFXLEVBQUUsUUFBUSwwQ0FBMEMsOEJBQThCLG1CQUFtQiwrQkFBK0IsbUJBQW1CLGFBQWEsMEJBQTBCLEVBQUUsT0FBTyw2R0FBNkcsb0JBQW9CLFNBQVMsT0FBTyxPQUFPLDJDQUEyQyxvQkFBb0IsdUJBQXVCLHlCQUF5QixvQ0FBb0Msb0JBQW9CLGdDQUFnQyxTQUFTLDJQQUEyUCxVQUFVLDBCQUEwQixFQUFFLFVBQVUsbUNBQW1DLEVBQUUsZ0JBQWdCLFNBQVMseURBQXlELFVBQVUsMEJBQTBCLEVBQUUsdUdBQXVHLHdCQUF3QixZQUFZLEdBQUcsZ0JBQWdCLDBDQUEwQywyREFBMkQscUJBQXFCLElBQUksRUFBRSwyQ0FBMkMsMkJBQTJCLGVBQWUsTUFBTSxxQ0FBcUMsUUFBUSxhQUFhLE1BQU0sRUFBRSxjQUFjLHNCQUFzQixzQkFBc0IsbUJBQW1CLEVBQUUsV0FBVyxzQkFBc0IsZ0NBQWdDLEVBQUUsTUFBTSx1QkFBdUIscUJBQXFCLG9CQUFvQixxQkFBcUIsMkRBQTJELEVBQUUsVUFBVSwwQkFBMEIsNkJBQTZCLGNBQWMsbUJBQW1CLFlBQVksRUFBRSwyQkFBMkIsa0JBQWtCLHdDQUF3QyxFQUFFLHNEQUFzRCwyREFBMkQsWUFBWSxHQUFHLE1BQU0sdUJBQXVCLHFCQUFxQiw4RkFBOEYsc0JBQXNCLEVBQUUsVUFBVSwwQkFBMEIsMEJBQTBCLDRDQUE0QyxFQUFFLDJCQUEyQixzQkFBc0IsSUFBSSxNQUFNLHdCQUF3QixVQUFVLFNBQVMsU0FBUyxFQUFFLGtCQUFrQixzQkFBc0Isb0RBQW9ELEVBQUUseUNBQXlDLE9BQU8sZ0NBQWdDLFNBQVMsT0FBTyxvQkFBb0IseUJBQXlCLElBQUksTUFBTSxtQkFBbUIsZ0JBQWdCLFNBQVMsU0FBUyxFQUFFLGdCQUFnQixzQkFBc0Isb0RBQW9ELEVBQUUseUNBQXlDLE9BQU8sd0NBQXdDLFNBQVMsT0FBTyw0QkFBNEIsZ0JBQWdCLElBQUksTUFBTSxtQkFBbUIsZ0JBQWdCLFNBQVMsU0FBUyxFQUFFLEdBQUcseUJBQXlCLG9EQUFvRCxFQUFFLHlDQUF5QyxPQUFPLFlBQVksU0FBUyxPQUFPLFVBQVUsa0JBQWtCLCtCQUErQixrQkFBa0IsK0JBQStCLGFBQWEsb0JBQW9CLGNBQWMsd0JBQXdCLHFCQUFxQixZQUFZLGVBQWUsc0NBQXNDLHVCQUF1QixrQkFBa0IsR0FBRyxNQUFNLHNCQUFzQixvRUFBb0UseUNBQXlDLEVBQUUsd0JBQXdCLGlCQUFpQixJQUFJLFFBQVEsYUFBYSxvQkFBb0IsRUFBRSxjQUFjLGNBQWMsMkJBQTJCLE1BQU0seUJBQXlCLGdCQUFnQixtRUFBbUUsZ0JBQWdCLE1BQU0sY0FBYyxHQUFHLFlBQVksU0FBUyxTQUFTLEVBQUUsS0FBSyx5QkFBeUIsTUFBTSx3QkFBd0IsSUFBSSx1QkFBdUIsbUNBQW1DLFlBQVksMkJBQTJCLGFBQWEsc0RBQXNELG1CQUFtQixPQUFPLGNBQWMsV0FBVyxhQUFhLGtCQUFrQixNQUFNLGVBQWUsZ0NBQWdDLFVBQVUsa0JBQWtCLElBQUksa0JBQWtCLEVBQUUsa0RBQWtELGdCQUFnQixNQUFNLFFBQVEsMEJBQTBCLFVBQVUsUUFBUSxFQUFFLFlBQVksa0JBQWtCLHVDQUF1QyxrQkFBa0IsdUNBQXVDLGFBQWEsNkJBQTZCLGNBQWMsbUNBQW1DLGVBQWUscUNBQXFDLE1BQU0sNkJBQTZCLFNBQVMsd0VBQXdFLHdCQUF3QixzQ0FBc0MsVUFBVSxXQUFXLFdBQVcsVUFBVSxLQUFLLG9CQUFvQixTQUFTLHdDQUF3QyxTQUFTLE1BQU0sSUFBSSxLQUFLLGtCQUFrQixTQUFTLG9DQUFvQyxZQUFZLDBCQUEwQixpQkFBaUIsNkNBQTZDLDJEQUEyRCxTQUFTLGtCQUFrQixXQUFXLHlDQUF5QyxLQUFLLGdDQUFnQyxTQUFTLDRDQUE0QyxRQUFRLG1DQUFtQyxLQUFLLGdDQUFnQyxTQUFTLDRDQUE0QyxVQUFVLGVBQWUsRUFBRSxRQUFRLGtDQUFrQyxVQUFVLDRCQUE0QixXQUFXLFNBQVMsa0JBQWtCLFdBQVcsS0FBSyw0QkFBNEIsT0FBTyxLQUFLLGtCQUFrQixXQUFXLHFCQUFxQixxQkFBcUIsVUFBVSxRQUFRLEtBQUsscUJBQXFCLGlCQUFpQixtQkFBbUIsZ0JBQWdCLHlCQUF5Qiw2QkFBNkIsZ0RBQWdELFNBQVMsT0FBTyxrQkFBa0IsV0FBVyxZQUFZLEtBQUssS0FBSyxFQUFFLFdBQVcsc0JBQXNCLCtCQUErQixxQkFBcUIsUUFBUSxrQkFBa0IsK0lBQStJLDREQUE0RCxPQUFPLHlGQUF5RixHQUFHLFNBQVMsdUJBQXVCLElBQUksU0FBUyw0QkFBNEIsOEJBQThCLE1BQU0sZ0JBQWdCLEdBQUcsR0FBRyxtQ0FBbUMsRUFBRSw0QkFBNEIsTUFBTSxnQkFBZ0IscUJBQXFCLEdBQUcsbUNBQW1DLEdBQUcsV0FBVyxHQUFHLG9CQUFvQixrQ0FBa0Msd0JBQXdCLFVBQVUsV0FBVyxXQUFXLHdDQUF3Qyx3Q0FBd0Msb0JBQW9CLFFBQVEsOERBQThELE1BQU0sa0JBQWtCLFNBQVMsc0JBQXNCLFNBQVMsTUFBTSx1REFBdUQsT0FBTyxvQ0FBb0MsWUFBWSxnRUFBZ0UsaUJBQWlCLDhCQUE4QixlQUFlLHVDQUF1QyxFQUFFLDJDQUEyQyxpQkFBaUIsdUNBQXVDLEVBQUUsMkNBQTJDLFVBQVUsaUNBQWlDLFdBQVcsd0JBQXdCLE9BQU8sb0NBQW9DLFFBQVEsSUFBSSxPQUFPLHNDQUFzQyxFQUFFLFFBQVEsd0hBQXdILE1BQU0sNkRBQTZELDRDQUE0Qyx3QkFBd0Isa0ZBQWtGLEVBQUUsVUFBVSxtQ0FBbUMseURBQXlELE9BQU8sMEJBQTBCLHdCQUF3Qix5QkFBeUIsUUFBUSw2RUFBNkUsTUFBTSxrREFBa0QsSUFBSSx1QkFBdUIsUUFBUSxRQUFRLDhFQUE4RSxNQUFNLGtEQUFrRCxJQUFJLHdCQUF3QixZQUFZLDBCQUEwQixjQUFjLDBCQUEwQixpQkFBaUIsdUJBQXVCLG1CQUFtQixJQUFJLGdJQUFnSSxPQUFPLHNEQUFzRCxTQUFTLG1CQUFtQixZQUFZLEtBQUssbUNBQW1DLGtGQUFrRixlQUFlLHVCQUF1QixHQUFHLFFBQVEsd0NBQXdDLHVCQUF1Qiw0QkFBNEIsUUFBUSw4REFBOEQsMkNBQTJDLEVBQUUsd0NBQXdDLGVBQWUsRUFBRSxRQUFRLDZDQUE2QyxRQUFRLHVDQUF1QyxjQUFjLEVBQUUsUUFBUSxLQUFLLGdDQUFnQyxRQUFRLG1CQUFtQixrQkFBa0IsTUFBTSxzQkFBc0IsK0NBQStDLDRCQUE0QixzSEFBc0gsRUFBRSxFQUFFLGdDQUFnQyxRQUFRLGlDQUFpQyxxQkFBcUIsc0JBQXNCLGtDQUFrQyxNQUFNLHVEQUF1RCxzQkFBc0IsNEJBQTRCLDJDQUEyQyxFQUFFLEVBQUUsRUFBRSx3QkFBd0IsR0FBRywyQkFBMkIsR0FBRyw0QkFBNEIsR0FBRywyQ0FBMkMsR0FBRywrQkFBK0IsR0FBRyx3Q0FBd0MsR0FBRyx5QkFBeUIsR0FBRyxrQ0FBa0M7QUFDcDRWIiwic291cmNlcyI6WyIvVXNlcnMvZWxsYXN1bW1lcmhpbGwvRGVza3RvcC9teWNyaXR0ZXJzL2thbmJhbi1ib2FyZC9ub2RlX21vZHVsZXMvLnBucG0vQG5ob3N0K2hhc3VyYS1zdG9yYWdlLWpzQDIuOC4wL25vZGVfbW9kdWxlcy9Abmhvc3QvaGFzdXJhLXN0b3JhZ2UtanMvZGlzdC9pbmRleC5janMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7dmFyIEM9T2JqZWN0LmRlZmluZVByb3BlcnR5O3ZhciBOPSh0LGUscik9PmUgaW4gdD9DKHQsZSx7ZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITAsdmFsdWU6cn0pOnRbZV09cjt2YXIgZj0odCxlLHIpPT5OKHQsdHlwZW9mIGUhPVwic3ltYm9sXCI/ZStcIlwiOmUscik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsU3ltYm9sLnRvU3RyaW5nVGFnLHt2YWx1ZTpcIk1vZHVsZVwifSk7Y29uc3QgeD1yZXF1aXJlKFwiZmV0Y2gtcG9ueWZpbGxcIiksVD1yZXF1aXJlKFwiZm9ybS1kYXRhXCIpLGQ9cmVxdWlyZShcInhzdGF0ZVwiKTtsZXQgTT1nbG9iYWxUaGlzLmZldGNoO2NvbnN0IE89YXN5bmModCxlLHthY2Nlc3NUb2tlbjpyLG5hbWU6cyxmaWxlSWQ6YSxidWNrZXRJZDppLGFkbWluU2VjcmV0Om8sb25VcGxvYWRQcm9ncmVzczpsLGhlYWRlcnM6Yz17fX09e30pPT57dmFyIEw7Y29uc3QgaD17Li4uY307aSYmZS5hcHBlbmQoXCJidWNrZXQtaWRcIixpKSxvJiYoaFtcIngtaGFzdXJhLWFkbWluLXNlY3JldFwiXT1vKSxyJiYoaC5BdXRob3JpemF0aW9uPWBCZWFyZXIgJHtyfWApO2NvbnN0IFU9YCR7dH0vZmlsZXNgO2lmKHR5cGVvZiBYTUxIdHRwUmVxdWVzdD09XCJ1bmRlZmluZWRcIil0cnl7ZSBpbnN0YW5jZW9mIFQmJihNPXgoKS5mZXRjaCk7Y29uc3QgdT1hd2FpdCBNKFUse21ldGhvZDpcIlBPU1RcIixoZWFkZXJzOmgsYm9keTplfSksbj1hd2FpdCB1Lmpzb24oKTtyZXR1cm4gdS5vaz97ZmlsZU1ldGFkYXRhOm4sZXJyb3I6bnVsbH06e2Vycm9yOntzdGF0dXM6dS5zdGF0dXMsbWVzc2FnZTooKEw9bj09bnVsbD92b2lkIDA6bi5lcnJvcik9PW51bGw/dm9pZCAwOkwubWVzc2FnZSl8fHUuc3RhdHVzVGV4dCxlcnJvcjp1LnN0YXR1c1RleHR9LGZpbGVNZXRhZGF0YTpudWxsfX1jYXRjaCh1KXtyZXR1cm57ZXJyb3I6e3N0YXR1czowLG1lc3NhZ2U6dS5tZXNzYWdlLGVycm9yOnUubWVzc2FnZX0sZmlsZU1ldGFkYXRhOm51bGx9fXJldHVybiBuZXcgUHJvbWlzZSh1PT57bGV0IG49bmV3IFhNTEh0dHBSZXF1ZXN0O24ucmVzcG9uc2VUeXBlPVwianNvblwiLG4ub25sb2FkPSgpPT57dmFyIHAsZyx3LFMsRixfLEksUjtpZihuLnN0YXR1czwyMDB8fG4uc3RhdHVzPj0zMDApe2NvbnN0IGI9e2Vycm9yOihGPShTPShnPShwPW4ucmVzcG9uc2UpPT1udWxsP3ZvaWQgMDpwLmVycm9yKT09bnVsbD92b2lkIDA6Zy5tZXNzYWdlKSE9bnVsbD9TOih3PW4ucmVzcG9uc2UpPT1udWxsP3ZvaWQgMDp3LmVycm9yKSE9bnVsbD9GOm4ucmVzcG9uc2UsbWVzc2FnZTooUj0oST0oXz1uLnJlc3BvbnNlKT09bnVsbD92b2lkIDA6Xy5lcnJvcik9PW51bGw/dm9pZCAwOkkubWVzc2FnZSkhPW51bGw/UjpuLnJlc3BvbnNlLHN0YXR1czpuLnN0YXR1c307cmV0dXJuIHUoe2ZpbGVNZXRhZGF0YTpudWxsLGVycm9yOmJ9KX1yZXR1cm4gdSh7ZmlsZU1ldGFkYXRhOm4ucmVzcG9uc2UsZXJyb3I6bnVsbH0pfSxuLm9uZXJyb3I9KCk9Pntjb25zdCBwPXtlcnJvcjpuLnN0YXR1c1RleHQsbWVzc2FnZTpuLnN0YXR1c1RleHQsc3RhdHVzOm4uc3RhdHVzfTtyZXR1cm4gdSh7ZmlsZU1ldGFkYXRhOm51bGwsZXJyb3I6cH0pfSxsJiZuLnVwbG9hZC5hZGRFdmVudExpc3RlbmVyKFwicHJvZ3Jlc3NcIixsLCExKSxuLm9wZW4oXCJQT1NUXCIsVSwhMCksT2JqZWN0LmVudHJpZXMoaCkuZm9yRWFjaCgoW3AsZ10pPT57bi5zZXRSZXF1ZXN0SGVhZGVyKHAsZyl9KSxuLnNlbmQoZSl9KX07ZnVuY3Rpb24gQSh0LGUpe2lmKCFlfHxPYmplY3Qua2V5cyhlKS5sZW5ndGg9PT0wKXJldHVybiB0O2NvbnN0IHI9bmV3IFVSTCh0KSxzPU9iamVjdC5lbnRyaWVzKGUpLnJlZHVjZSgoYSxbaSxvXSk9Pih7Li4uYSxbaS5jaGFyQXQoMCldOm99KSx7fSk7cmV0dXJuIE9iamVjdC5lbnRyaWVzKHMpLmZvckVhY2goKFthLGldKT0+e2kmJnIuc2VhcmNoUGFyYW1zLnNldChhLGkpfSksci50b1N0cmluZygpfWxldCBtO3R5cGVvZiBtPT1cInVuZGVmaW5lZFwiJiYobT14KCkuZmV0Y2gpO2NsYXNzIGt7Y29uc3RydWN0b3Ioe3VybDplfSl7Zih0aGlzLFwidXJsXCIpO2YodGhpcyxcImFjY2Vzc1Rva2VuXCIpO2YodGhpcyxcImFkbWluU2VjcmV0XCIpO2YodGhpcyxcImhlYWRlcnNcIix7fSk7dGhpcy51cmw9ZX1hc3luYyB1cGxvYWRGb3JtRGF0YSh7Zm9ybURhdGE6ZSxidWNrZXRJZDpyLGhlYWRlcnM6c30pe2NvbnN0e2Vycm9yOmEsZmlsZU1ldGFkYXRhOml9PWF3YWl0IE8odGhpcy51cmwsZSx7YnVja2V0SWQ6cixoZWFkZXJzOnsuLi50aGlzLmhlYWRlcnMsLi4uc30sYWNjZXNzVG9rZW46dGhpcy5hY2Nlc3NUb2tlbixhZG1pblNlY3JldDp0aGlzLmFkbWluU2VjcmV0fSk7cmV0dXJuIGE/e2ZpbGVNZXRhZGF0YTpudWxsLGVycm9yOmF9OmkmJiEoXCJwcm9jZXNzZWRGaWxlc1wiaW4gaSk/e2ZpbGVNZXRhZGF0YTp7cHJvY2Vzc2VkRmlsZXM6W2ldfSxlcnJvcjpudWxsfTp7ZmlsZU1ldGFkYXRhOmksZXJyb3I6bnVsbH19YXN5bmMgdXBsb2FkRmlsZSh7ZmlsZTplLGJ1Y2tldElkOnIsaWQ6cyxuYW1lOmEsaGVhZGVyczppfSl7Y29uc3Qgbz10eXBlb2Ygd2luZG93PT1cInVuZGVmaW5lZFwiP25ldyBUOm5ldyBGb3JtRGF0YTtvLmFwcGVuZChcImZpbGVbXVwiLGUpLG8uYXBwZW5kKFwibWV0YWRhdGFbXVwiLEpTT04uc3RyaW5naWZ5KHtpZDpzLG5hbWU6YX0pKTtjb25zdHtlcnJvcjpsLGZpbGVNZXRhZGF0YTpjfT1hd2FpdCBPKHRoaXMudXJsLG8se2FjY2Vzc1Rva2VuOnRoaXMuYWNjZXNzVG9rZW4sYWRtaW5TZWNyZXQ6dGhpcy5hZG1pblNlY3JldCxidWNrZXRJZDpyLGZpbGVJZDpzLG5hbWU6YSxoZWFkZXJzOnsuLi50aGlzLmhlYWRlcnMsLi4uaX19KTtyZXR1cm4gbD97ZmlsZU1ldGFkYXRhOm51bGwsZXJyb3I6bH06YyYmXCJwcm9jZXNzZWRGaWxlc1wiaW4gYz97ZmlsZU1ldGFkYXRhOmMucHJvY2Vzc2VkRmlsZXNbMF0sZXJyb3I6bnVsbH06e2ZpbGVNZXRhZGF0YTpjLGVycm9yOm51bGx9fWFzeW5jIGRvd25sb2FkRmlsZShlKXt0cnl7Y29uc3R7ZmlsZUlkOnIsaGVhZGVyczpzLC4uLmF9PWUsaT1BKGAke3RoaXMudXJsfS9maWxlcy8ke3J9YCxhKSxvPWF3YWl0IG0oaSx7bWV0aG9kOlwiR0VUXCIsaGVhZGVyczp7Li4udGhpcy5nZW5lcmF0ZUF1dGhIZWFkZXJzKCksLi4udGhpcy5oZWFkZXJzLC4uLnN9fSk7aWYoIW8ub2spdGhyb3cgbmV3IEVycm9yKGF3YWl0IG8udGV4dCgpKTtyZXR1cm57ZmlsZTphd2FpdCBvLmJsb2IoKSxlcnJvcjpudWxsfX1jYXRjaChyKXtyZXR1cm57ZmlsZTpudWxsLGVycm9yOnJ9fX1hc3luYyBnZXRQcmVzaWduZWRVcmwoZSl7dHJ5e2NvbnN0e2ZpbGVJZDpyLGhlYWRlcnM6c309ZSxhPWF3YWl0IG0oYCR7dGhpcy51cmx9L2ZpbGVzLyR7cn0vcHJlc2lnbmVkdXJsYCx7bWV0aG9kOlwiR0VUXCIsaGVhZGVyczp7Li4udGhpcy5nZW5lcmF0ZUF1dGhIZWFkZXJzKCksLi4udGhpcy5oZWFkZXJzLC4uLnN9fSk7aWYoIWEub2spdGhyb3cgbmV3IEVycm9yKGF3YWl0IGEudGV4dCgpKTtyZXR1cm57cHJlc2lnbmVkVXJsOmF3YWl0IGEuanNvbigpLGVycm9yOm51bGx9fWNhdGNoKHIpe3JldHVybntwcmVzaWduZWRVcmw6bnVsbCxlcnJvcjpyfX19YXN5bmMgZGVsZXRlKGUpe3RyeXtjb25zdHtmaWxlSWQ6cixoZWFkZXJzOnN9PWUsYT1hd2FpdCBtKGAke3RoaXMudXJsfS9maWxlcy8ke3J9YCx7bWV0aG9kOlwiREVMRVRFXCIsaGVhZGVyczp7Li4udGhpcy5nZW5lcmF0ZUF1dGhIZWFkZXJzKCksLi4udGhpcy5oZWFkZXJzLC4uLnN9fSk7aWYoIWEub2spdGhyb3cgbmV3IEVycm9yKGF3YWl0IGEudGV4dCgpKTtyZXR1cm57ZXJyb3I6bnVsbH19Y2F0Y2gocil7cmV0dXJue2Vycm9yOnJ9fX1zZXRBY2Nlc3NUb2tlbihlKXtyZXR1cm4gdGhpcy5hY2Nlc3NUb2tlbj1lLHRoaXN9c2V0QWRtaW5TZWNyZXQoZSl7cmV0dXJuIHRoaXMuYWRtaW5TZWNyZXQ9ZSx0aGlzfWdldEhlYWRlcnMoKXtyZXR1cm4gdGhpcy5oZWFkZXJzfXNldEhlYWRlcnMoZSl7cmV0dXJuIGU/KHRoaXMuaGVhZGVycz17Li4udGhpcy5oZWFkZXJzLC4uLmV9LHRoaXMpOnRoaXN9dW5zZXRIZWFkZXJzKCl7Y29uc3QgZT10aGlzLmhlYWRlcnNbXCJ4LWhhc3VyYS1yb2xlXCJdO3JldHVybiB0aGlzLmhlYWRlcnM9ZT97XCJ4LWhhc3VyYS1yb2xlXCI6ZX06e30sdGhpc31nZW5lcmF0ZUF1dGhIZWFkZXJzKCl7aWYoISghdGhpcy5hZG1pblNlY3JldCYmIXRoaXMuYWNjZXNzVG9rZW4pKXJldHVybiB0aGlzLmFkbWluU2VjcmV0P3tcIngtaGFzdXJhLWFkbWluLXNlY3JldFwiOnRoaXMuYWRtaW5TZWNyZXR9OntBdXRob3JpemF0aW9uOmBCZWFyZXIgJHt0aGlzLmFjY2Vzc1Rva2VufWB9fX1jbGFzcyAke2NvbnN0cnVjdG9yKHt1cmw6ZSxhZG1pblNlY3JldDpyfSl7Zih0aGlzLFwidXJsXCIpO2YodGhpcyxcImFwaVwiKTt0aGlzLnVybD1lLHRoaXMuYXBpPW5ldyBrKHt1cmw6ZX0pLHRoaXMuc2V0QWRtaW5TZWNyZXQocil9YXN5bmMgdXBsb2FkKGUpe3JldHVyblwiZmlsZVwiaW4gZT90aGlzLmFwaS51cGxvYWRGaWxlKGUpOnRoaXMuYXBpLnVwbG9hZEZvcm1EYXRhKGUpfWdldFB1YmxpY1VybChlKXtjb25zdHtmaWxlSWQ6ciwuLi5zfT1lO3JldHVybiBBKGAke3RoaXMudXJsfS9maWxlcy8ke3J9YCxzKX1hc3luYyBnZXRQcmVzaWduZWRVcmwoZSl7Y29uc3R7ZmlsZUlkOnIsaGVhZGVyczpzLC4uLmF9PWUse3ByZXNpZ25lZFVybDppLGVycm9yOm99PWF3YWl0IHRoaXMuYXBpLmdldFByZXNpZ25lZFVybChlKTtpZihvKXJldHVybntwcmVzaWduZWRVcmw6bnVsbCxlcnJvcjpvfTtpZighaSlyZXR1cm57cHJlc2lnbmVkVXJsOm51bGwsZXJyb3I6bmV3IEVycm9yKFwiSW52YWxpZCBmaWxlIGlkXCIpfTtjb25zdCBsPUEoaS51cmwsYSk7cmV0dXJue3ByZXNpZ25lZFVybDp7Li4uaSx1cmw6bH0sZXJyb3I6bnVsbH19YXN5bmMgZG93bmxvYWQoZSl7Y29uc3R7ZmlsZTpyLGVycm9yOnN9PWF3YWl0IHRoaXMuYXBpLmRvd25sb2FkRmlsZShlKTtyZXR1cm4gcz97ZmlsZTpudWxsLGVycm9yOnN9OnI/e2ZpbGU6cixlcnJvcjpudWxsfTp7ZmlsZTpudWxsLGVycm9yOm5ldyBFcnJvcihcIkZpbGUgZG9lcyBub3QgZXhpc3RcIil9fWFzeW5jIGRlbGV0ZShlKXtjb25zdHtlcnJvcjpyfT1hd2FpdCB0aGlzLmFwaS5kZWxldGUoZSk7cmV0dXJuIHI/e2Vycm9yOnJ9OntlcnJvcjpudWxsfX1zZXRBY2Nlc3NUb2tlbihlKXtyZXR1cm4gdGhpcy5hcGkuc2V0QWNjZXNzVG9rZW4oZSksdGhpc31zZXRBZG1pblNlY3JldChlKXtyZXR1cm4gdGhpcy5hcGkuc2V0QWRtaW5TZWNyZXQoZSksdGhpc31nZXRIZWFkZXJzKCl7cmV0dXJuIHRoaXMuYXBpLmdldEhlYWRlcnMoKX1zZXRIZWFkZXJzKGUpe3JldHVybiB0aGlzLmFwaS5zZXRIZWFkZXJzKGUpLHRoaXN9dW5zZXRIZWFkZXJzKCl7cmV0dXJuIHRoaXMuYXBpLnVuc2V0SGVhZGVycygpLHRoaXN9fWxldCBEO3R5cGVvZiBEPT1cInVuZGVmaW5lZFwiJiYoRD1UKTtjb25zdCB5PXtwcm9ncmVzczpudWxsLGxvYWRlZDowLGVycm9yOm51bGwsYnVja2V0SWQ6dm9pZCAwLGZpbGU6dm9pZCAwLGlkOnZvaWQgMH0sSD0oKT0+ZC5jcmVhdGVNYWNoaW5lKHtwcmVkaWN0YWJsZUFjdGlvbkFyZ3VtZW50czohMCxzY2hlbWE6e2NvbnRleHQ6e30sZXZlbnRzOnt9fSx0c1R5cGVzOnt9LGNvbnRleHQ6ey4uLnl9LGluaXRpYWw6XCJpZGxlXCIsb246e0RFU1RST1k6e2FjdGlvbnM6XCJzZW5kRGVzdHJveVwiLHRhcmdldDpcInN0b3BwZWRcIn19LHN0YXRlczp7aWRsZTp7b246e0FERDp7YWN0aW9uczpcImFkZEZpbGVcIn0sVVBMT0FEOntjb25kOlwiaGFzRmlsZVwiLHRhcmdldDpcInVwbG9hZGluZ1wifX19LHVwbG9hZGluZzp7ZW50cnk6XCJyZXNldFByb2dyZXNzXCIsb246e1VQTE9BRF9QUk9HUkVTUzp7YWN0aW9uczpbXCJpbmNyZW1lbnRQcm9ncmVzc1wiLFwic2VuZFByb2dyZXNzXCJdfSxVUExPQURfRE9ORTpcInVwbG9hZGVkXCIsVVBMT0FEX0VSUk9SOlwiZXJyb3JcIixDQU5DRUw6XCJpZGxlXCJ9LGludm9rZTp7c3JjOlwidXBsb2FkRmlsZVwifX0sdXBsb2FkZWQ6e2VudHJ5OltcInNldEZpbGVNZXRhZGF0YVwiLFwic2VuZERvbmVcIl0sb246e0FERDp7YWN0aW9uczpcImFkZEZpbGVcIix0YXJnZXQ6XCJpZGxlXCJ9LFVQTE9BRDp7YWN0aW9uczpcInJlc2V0Q29udGV4dFwiLHRhcmdldDpcInVwbG9hZGluZ1wifX19LGVycm9yOntlbnRyeTpbXCJzZXRFcnJvclwiLFwic2VuZEVycm9yXCJdLG9uOntBREQ6e2FjdGlvbnM6XCJhZGRGaWxlXCIsdGFyZ2V0OlwiaWRsZVwifSxVUExPQUQ6e2FjdGlvbnM6XCJyZXNldENvbnRleHRcIix0YXJnZXQ6XCJ1cGxvYWRpbmdcIn19fSxzdG9wcGVkOnt0eXBlOlwiZmluYWxcIn19fSx7Z3VhcmRzOntoYXNGaWxlOih0LGUpPT4hIXQuZmlsZXx8ISFlLmZpbGV9LGFjdGlvbnM6e2luY3JlbWVudFByb2dyZXNzOmQuYXNzaWduKHtsb2FkZWQ6KHQse2xvYWRlZDplfSk9PmUscHJvZ3Jlc3M6KHQse3Byb2dyZXNzOmV9KT0+ZX0pLHNldEZpbGVNZXRhZGF0YTpkLmFzc2lnbih7aWQ6KHQse2lkOmV9KT0+ZSxidWNrZXRJZDoodCx7YnVja2V0SWQ6ZX0pPT5lLHByb2dyZXNzOnQ9PjEwMH0pLHNldEVycm9yOmQuYXNzaWduKHtlcnJvcjoodCx7ZXJyb3I6ZX0pPT5lfSksc2VuZFByb2dyZXNzOigpPT57fSxzZW5kRXJyb3I6KCk9Pnt9LHNlbmREZXN0cm95OigpPT57fSxzZW5kRG9uZTooKT0+e30scmVzZXRQcm9ncmVzczpkLmFzc2lnbih7cHJvZ3Jlc3M6dD0+bnVsbCxsb2FkZWQ6dD0+MH0pLHJlc2V0Q29udGV4dDpkLmFzc2lnbih0PT55KSxhZGRGaWxlOmQuYXNzaWduKHtmaWxlOih0LHtmaWxlOmV9KT0+ZSxidWNrZXRJZDoodCx7YnVja2V0SWQ6ZX0pPT5lLGlkOih0LHtpZDplfSk9PmV9KX0sc2VydmljZXM6e3VwbG9hZEZpbGU6KHQsZSk9PnI9Pntjb25zdCBzPWUuZmlsZXx8dC5maWxlLGE9bmV3IEQ7YS5hcHBlbmQoXCJmaWxlW11cIixzKTtsZXQgaT0wO3JldHVybiBPKGUudXJsLGEse2ZpbGVJZDplLmlkfHx0LmlkLGJ1Y2tldElkOmUuYnVja2V0SWR8fHQuYnVja2V0SWQsYWNjZXNzVG9rZW46ZS5hY2Nlc3NUb2tlbixhZG1pblNlY3JldDplLmFkbWluU2VjcmV0LG5hbWU6ZS5uYW1lfHxzLm5hbWUsb25VcGxvYWRQcm9ncmVzczpvPT57Y29uc3QgbD1vLnRvdGFsP01hdGgucm91bmQoby5sb2FkZWQqcy5zaXplL28udG90YWwpOjAsYz1sLWk7aT1sLHIoe3R5cGU6XCJVUExPQURfUFJPR1JFU1NcIixwcm9ncmVzczpvLnRvdGFsP01hdGgucm91bmQobCoxMDAvby50b3RhbCk6MCxsb2FkZWQ6bCxhZGRpdGlvbnM6Y30pfX0pLnRoZW4oKHtmaWxlTWV0YWRhdGE6byxlcnJvcjpsfSk9PntpZihsJiZyKHt0eXBlOlwiVVBMT0FEX0VSUk9SXCIsZXJyb3I6bH0pLG8mJiEoXCJwcm9jZXNzZWRGaWxlc1wiaW4gbykpe2NvbnN0e2lkOmMsYnVja2V0SWQ6aH09bztyKHt0eXBlOlwiVVBMT0FEX0RPTkVcIixpZDpjLGJ1Y2tldElkOmh9KX1pZihvJiZcInByb2Nlc3NlZEZpbGVzXCJpbiBvKXtjb25zdHtpZDpjLGJ1Y2tldElkOmh9PW8ucHJvY2Vzc2VkRmlsZXNbMF07cih7dHlwZTpcIlVQTE9BRF9ET05FXCIsaWQ6YyxidWNrZXRJZDpofSl9fSksKCk9Pnt9fX19KSx7cHVyZTpFLHNlbmRQYXJlbnQ6UH09ZC5hY3Rpb25zLGo9KCk9PmQuY3JlYXRlTWFjaGluZSh7aWQ6XCJmaWxlcy1saXN0XCIsc2NoZW1hOntjb250ZXh0Ont9LGV2ZW50czp7fX0sdHNUeXBlczp7fSxwcmVkaWN0YWJsZUFjdGlvbkFyZ3VtZW50czohMCxjb250ZXh0Ontwcm9ncmVzczpudWxsLGZpbGVzOltdLGxvYWRlZDowLHRvdGFsOjB9LGluaXRpYWw6XCJpZGxlXCIsb246e1VQTE9BRDp7Y29uZDpcImhhc0ZpbGVUb0Rvd25sb2FkXCIsYWN0aW9uczpcImFkZEl0ZW1cIix0YXJnZXQ6XCJ1cGxvYWRpbmdcIn0sQUREOnthY3Rpb25zOlwiYWRkSXRlbVwifSxSRU1PVkU6e2FjdGlvbnM6XCJyZW1vdmVJdGVtXCJ9fSxzdGF0ZXM6e2lkbGU6e2VudHJ5OltcInJlc2V0UHJvZ3Jlc3NcIixcInJlc2V0TG9hZGVkXCIsXCJyZXNldFRvdGFsXCJdLG9uOntDTEVBUjp7YWN0aW9uczpcImNsZWFyTGlzdFwiLHRhcmdldDpcImlkbGVcIn19fSx1cGxvYWRpbmc6e2VudHJ5OltcInVwbG9hZFwiLFwic3RhcnRQcm9ncmVzc1wiLFwicmVzZXRMb2FkZWRcIixcInJlc2V0VG90YWxcIl0sb246e1VQTE9BRF9QUk9HUkVTUzp7YWN0aW9uczpbXCJpbmNyZW1lbnRQcm9ncmVzc1wiXX0sVVBMT0FEX0RPTkU6W3tjb25kOlwiaXNBbGxVcGxvYWRlZFwiLHRhcmdldDpcInVwbG9hZGVkXCJ9LHtjb25kOlwiaXNBbGxVcGxvYWRlZE9yRXJyb3JcIix0YXJnZXQ6XCJlcnJvclwifV0sVVBMT0FEX0VSUk9SOlt7Y29uZDpcImlzQWxsVXBsb2FkZWRcIix0YXJnZXQ6XCJ1cGxvYWRlZFwifSx7Y29uZDpcImlzQWxsVXBsb2FkZWRPckVycm9yXCIsdGFyZ2V0OlwiZXJyb3JcIn1dLENBTkNFTDp7YWN0aW9uczpcImNhbmNlbFwiLHRhcmdldDpcImlkbGVcIn19fSx1cGxvYWRlZDp7ZW50cnk6XCJzZXRVcGxvYWRlZFwiLG9uOntDTEVBUjp7YWN0aW9uczpcImNsZWFyTGlzdFwiLHRhcmdldDpcImlkbGVcIn19fSxlcnJvcjp7b246e0NMRUFSOnthY3Rpb25zOlwiY2xlYXJMaXN0XCIsdGFyZ2V0OlwiaWRsZVwifX19fX0se2d1YXJkczp7aGFzRmlsZVRvRG93bmxvYWQ6KHQsZSk9PnQuZmlsZXMuc29tZShyPT5yLmdldFNuYXBzaG90KCkubWF0Y2hlcyhcImlkbGVcIikpfHwhIWUuZmlsZXMsaXNBbGxVcGxvYWRlZDp0PT50LmZpbGVzLmV2ZXJ5KGU9Pnt2YXIgcjtyZXR1cm4ocj1lLmdldFNuYXBzaG90KCkpPT1udWxsP3ZvaWQgMDpyLm1hdGNoZXMoXCJ1cGxvYWRlZFwiKX0pLGlzQWxsVXBsb2FkZWRPckVycm9yOnQ9PnQuZmlsZXMuZXZlcnkoZT0+e2NvbnN0IHI9ZS5nZXRTbmFwc2hvdCgpO3JldHVybihyPT1udWxsP3ZvaWQgMDpyLm1hdGNoZXMoXCJlcnJvclwiKSl8fChyPT1udWxsP3ZvaWQgMDpyLm1hdGNoZXMoXCJ1cGxvYWRlZFwiKSl9KX0sYWN0aW9uczp7aW5jcmVtZW50UHJvZ3Jlc3M6ZC5hc3NpZ24oKHQsZSk9Pntjb25zdCByPXQubG9hZGVkK2UuYWRkaXRpb25zLHM9TWF0aC5yb3VuZChyKjEwMC90LnRvdGFsKTtyZXR1cm57Li4udCxsb2FkZWQ6cixwcm9ncmVzczpzfX0pLHNldFVwbG9hZGVkOmQuYXNzaWduKHtwcm9ncmVzczp0PT4xMDAsbG9hZGVkOih7ZmlsZXM6dH0pPT50Lm1hcChlPT5lLmdldFNuYXBzaG90KCkpLmZpbHRlcihlPT5lLm1hdGNoZXMoXCJ1cGxvYWRlZFwiKSkucmVkdWNlKChlLHIpPT57dmFyIHM7cmV0dXJuIGUrKChzPXIuY29udGV4dC5maWxlKT09bnVsbD92b2lkIDA6cy5zaXplKX0sMCl9KSxyZXNldFRvdGFsOmQuYXNzaWduKHt0b3RhbDooe2ZpbGVzOnR9KT0+dC5tYXAoZT0+ZS5nZXRTbmFwc2hvdCgpKS5maWx0ZXIoZT0+IWUubWF0Y2hlcyhcInVwbG9hZGVkXCIpKS5yZWR1Y2UoKGUscik9Pnt2YXIgcztyZXR1cm4gZSsoKHM9ci5jb250ZXh0LmZpbGUpPT1udWxsP3ZvaWQgMDpzLnNpemUpfSwwKX0pLHJlc2V0TG9hZGVkOmQuYXNzaWduKHtsb2FkZWQ6dD0+MH0pLHN0YXJ0UHJvZ3Jlc3M6ZC5hc3NpZ24oe3Byb2dyZXNzOnQ9PjB9KSxyZXNldFByb2dyZXNzOmQuYXNzaWduKHtwcm9ncmVzczp0PT5udWxsfSksYWRkSXRlbTpkLmFzc2lnbigodCx7ZmlsZXM6ZSxidWNrZXRJZDpyfSk9Pntjb25zdCBzPWU/QXJyYXkuaXNBcnJheShlKT9lOlwiaXRlbVwiaW4gZT9BcnJheS5mcm9tKGUpOltlXTpbXSxhPXQudG90YWwrcy5yZWR1Y2UoKG8sbCk9Pm8rbC5zaXplLDApLGk9TWF0aC5yb3VuZCh0LmxvYWRlZCoxMDAvYSk7cmV0dXJue2ZpbGVzOlsuLi50LmZpbGVzLC4uLnMubWFwKG89PmQuc3Bhd24oSCgpLndpdGhDb25maWcoe2FjdGlvbnM6e3NlbmRQcm9ncmVzczpQKChsLHthZGRpdGlvbnM6Y30pPT4oe3R5cGU6XCJVUExPQURfUFJPR1JFU1NcIixhZGRpdGlvbnM6Y30pKSxzZW5kRG9uZTpQKFwiVVBMT0FEX0RPTkVcIiksc2VuZEVycm9yOlAoXCJVUExPQURfRVJST1JcIiksc2VuZERlc3Ryb3k6UChcIlJFTU9WRVwiKX19KS53aXRoQ29udGV4dCh7Li4ueSxmaWxlOm8sYnVja2V0SWQ6cn0pLHtzeW5jOiEwfSkpXSx0b3RhbDphLGxvYWRlZDp0LmxvYWRlZCxwcm9ncmVzczppfX0pLHJlbW92ZUl0ZW06ZC5hc3NpZ24oe2ZpbGVzOnQ9PnQuZmlsZXMuZmlsdGVyKGU9Pnt2YXIgcyxhO2NvbnN0IHI9KHM9ZS5nZXRTbmFwc2hvdCgpKT09bnVsbD92b2lkIDA6cy5tYXRjaGVzKFwic3RvcHBlZFwiKTtyZXR1cm4gciYmKChhPWUuc3RvcCk9PW51bGx8fGEuY2FsbChlKSksIXJ9KX0pLGNsZWFyTGlzdDpFKHQ9PnQuZmlsZXMubWFwKGU9PmQuc2VuZCh7dHlwZTpcIkRFU1RST1lcIn0se3RvOmUuaWR9KSkpLHVwbG9hZDpFKCh0LGUpPT50LmZpbGVzLm1hcChyPT5kLnNlbmQoZSx7dG86ci5pZH0pKSksY2FuY2VsOkUodD0+dC5maWxlcy5tYXAoZT0+ZC5zZW5kKHt0eXBlOlwiQ0FOQ0VMXCJ9LHt0bzplLmlkfSkpKX19KSxxPWFzeW5jKHQsZSk9Pm5ldyBQcm9taXNlKHI9PntlLnNlbmQoe3R5cGU6XCJVUExPQURcIiwuLi50fSksZS5zdWJzY3JpYmUocz0+e3ZhciBhO3MubWF0Y2hlcyhcImVycm9yXCIpP3Ioe2Vycm9yOnMuY29udGV4dC5lcnJvcixpc0Vycm9yOiEwLGlzVXBsb2FkZWQ6ITF9KTpzLm1hdGNoZXMoXCJ1cGxvYWRlZFwiKSYmcih7ZXJyb3I6bnVsbCxpc0Vycm9yOiExLGlzVXBsb2FkZWQ6ITAsaWQ6cy5jb250ZXh0LmlkLGJ1Y2tldElkOnMuY29udGV4dC5pZCxuYW1lOihhPXMuY29udGV4dC5maWxlKT09bnVsbD92b2lkIDA6YS5uYW1lfSl9KX0pLHo9YXN5bmModCxlKT0+bmV3IFByb21pc2Uocj0+e2Uuc2VuZCh7dHlwZTpcIlVQTE9BRFwiLC4uLnQsZmlsZXM6dC5maWxlc30pLGUub25UcmFuc2l0aW9uKHM9PntzLm1hdGNoZXMoXCJlcnJvclwiKT9yKHtlcnJvcnM6cy5jb250ZXh0LmZpbGVzLmZpbHRlcihhPT57dmFyIGk7cmV0dXJuKGk9YS5nZXRTbmFwc2hvdCgpKT09bnVsbD92b2lkIDA6aS5jb250ZXh0LmVycm9yfSksaXNFcnJvcjohMCxmaWxlczpbXX0pOnMubWF0Y2hlcyhcInVwbG9hZGVkXCIpJiZyKHtlcnJvcnM6W10saXNFcnJvcjohMSxmaWxlczpzLmNvbnRleHQuZmlsZXN9KX0pfSk7ZXhwb3J0cy5IYXN1cmFTdG9yYWdlQXBpPWs7ZXhwb3J0cy5IYXN1cmFTdG9yYWdlQ2xpZW50PSQ7ZXhwb3J0cy5JTklUSUFMX0ZJTEVfQ09OVEVYVD15O2V4cG9ydHMuYXBwZW5kSW1hZ2VUcmFuc2Zvcm1hdGlvblBhcmFtZXRlcnM9QTtleHBvcnRzLmNyZWF0ZUZpbGVVcGxvYWRNYWNoaW5lPUg7ZXhwb3J0cy5jcmVhdGVNdWx0aXBsZUZpbGVzVXBsb2FkTWFjaGluZT1qO2V4cG9ydHMudXBsb2FkRmlsZVByb21pc2U9cTtleHBvcnRzLnVwbG9hZE11bHRpcGxlRmlsZXNQcm9taXNlPXo7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5janMuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@nhost+hasura-storage-js@2.8.0/node_modules/@nhost/hasura-storage-js/dist/index.cjs.js\n");

/***/ })

};
;